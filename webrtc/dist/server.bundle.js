/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./server/app02.js":
/*!*************************!*\
  !*** ./server/app02.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n// Required modules\nvar fs = __webpack_require__(/*! fs */ \"fs\");\nvar https = __webpack_require__(/*! https */ \"https\");\nvar express = __webpack_require__(/*! express */ \"express\");\nvar socketIo = __webpack_require__(/*! socket.io */ \"socket.io\");\nvar mediasoup = __webpack_require__(/*! mediasoup */ \"mediasoup\");\nvar path = __webpack_require__(/*! path */ \"path\");\nvar app = express();\n\n// HTTPS 서버 설정을 위해 인증서 경로\nvar options = {\n  key: fs.readFileSync('/etc/letsencrypt/live/webrtc.n-e.kr/privkey.pem'),\n  cert: fs.readFileSync('/etc/letsencrypt/live/webrtc.n-e.kr/fullchain.pem')\n};\nvar httpsServer = https.createServer(options, app);\nvar io = socketIo(httpsServer);\n\n// Express로 기본 경로 설정\napp.use(express[\"static\"](path.join(__dirname, '../public')));\napp.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname, '../public/index02.html'));\n});\n\n// HTTP 서버 실행 (포트 443)\nhttpsServer.listen(443, function () {\n  console.log('서버가 실행중');\n});\nvar worker;\nvar router;\nvar transports = {}; // 클라이언트별 Transport 정보 저장\nvar producers = {}; // 클라이언트별 Producer 저장\nvar consumers = {}; // 클라이언트별 Consumer 저장\n\n// Mediasoup Worker 생성 함수\nfunction createMediasoupWorker() {\n  return _createMediasoupWorker.apply(this, arguments);\n} // Mediasoup Router 생성 함수\nfunction _createMediasoupWorker() {\n  _createMediasoupWorker = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9() {\n    return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n      while (1) switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.prev = 0;\n          _context9.next = 3;\n          return mediasoup.createWorker({\n            rtcMinPort: 10000,\n            rtcMaxPort: 10100 // WebRTC에서 사용할 최소 및 최대 포트 지정\n          });\n        case 3:\n          worker = _context9.sent;\n          console.log('워커 생성 완료');\n          _context9.next = 10;\n          break;\n        case 7:\n          _context9.prev = 7;\n          _context9.t0 = _context9[\"catch\"](0);\n          console.log(\"워커 생성 실패\", _context9.t0);\n        case 10:\n          worker.on('died', function () {\n            console.error('워커 삭제. 서버를 종료합니다.');\n            process.exit(1); // Worker가 죽으면 서버를 종료.\n          });\n\n          // Router 생성\n          _context9.next = 13;\n          return createRouter();\n        case 13:\n        case \"end\":\n          return _context9.stop();\n      }\n    }, _callee9, null, [[0, 7]]);\n  }));\n  return _createMediasoupWorker.apply(this, arguments);\n}\nfunction createRouter() {\n  return _createRouter.apply(this, arguments);\n}\nfunction _createRouter() {\n  _createRouter = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n    var mediaCodecs;\n    return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n      while (1) switch (_context10.prev = _context10.next) {\n        case 0:\n          // 미디어 코덱 설정\n          mediaCodecs = [{\n            kind: 'audio',\n            mimeType: 'audio/opus',\n            clockRate: 48000,\n            channels: 2\n          }, {\n            kind: 'video',\n            mimeType: 'video/VP8',\n            clockRate: 90000\n          }];\n          _context10.prev = 1;\n          _context10.next = 4;\n          return worker.createRouter({\n            mediaCodecs: mediaCodecs\n          });\n        case 4:\n          router = _context10.sent;\n          console.log('라우터 생성 성공');\n          _context10.next = 11;\n          break;\n        case 8:\n          _context10.prev = 8;\n          _context10.t0 = _context10[\"catch\"](1);\n          console.log(\"라우터 생성 실패\", _context10.t0);\n        case 11:\n        case \"end\":\n          return _context10.stop();\n      }\n    }, _callee10, null, [[1, 8]]);\n  }));\n  return _createRouter.apply(this, arguments);\n}\ncreateMediasoupWorker();\n\n// 서버의 Socket.IO 이벤트 처리\nio.on('connection', function (socket) {\n  console.log(socket.id, ' : 새로운 클라이언트 접속');\n\n  // 라우터의 RTP 정보를 클라이언트에게 전달\n  socket.on('getRouterRtpCapabilities', /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(callback) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            console.log(socket.id, \" : 라우터 RTP정보 요청이 들어옴\");\n            _context.prev = 1;\n            _context.next = 4;\n            return callback(router.rtpCapabilities);\n          case 4:\n            _context.next = 9;\n            break;\n          case 6:\n            _context.prev = 6;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(socket.id, ' : RTP 데이터 보내기 실패', _context.t0);\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[1, 6]]);\n    }));\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  transports[socket.id] = {\n    producerTransport: null,\n    consumerTransports: []\n  };\n  producers[socket.id] = [];\n  consumers[socket.id] = [];\n\n  // 기존의 모든 Producer 정보를 새 클라이언트에게 전달\n  socket.on('produceDone', function () {\n    var _loop = function _loop(clientId) {\n      producers[clientId].forEach(function (producer) {\n        socket.emit('newProducer', {\n          producerId: producer.id,\n          clientId: clientId,\n          kind: producer.kind\n        });\n      });\n    };\n    for (var clientId in producers) {\n      _loop(clientId);\n    }\n  });\n\n  // Producer Transport 생성 요청 처리\n  socket.on('createProducerTransport', /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(_, callback) {\n      var producerTransport;\n      return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log(socket.id, ' : Producer Transport 생성 요청');\n            _context2.prev = 1;\n            _context2.next = 4;\n            return router.createWebRtcTransport({\n              listenIps: [{\n                ip: '0.0.0.0',\n                announcedIp: '117.16.153.134'\n              }],\n              enableUdp: true,\n              enableTcp: true\n            });\n          case 4:\n            producerTransport = _context2.sent;\n            transports[socket.id].producerTransport = producerTransport;\n            console.log(socket.id, ' : Producer Transport 생성 완료');\n            callback({\n              id: producerTransport.id,\n              iceParameters: producerTransport.iceParameters,\n              iceCandidates: producerTransport.iceCandidates,\n              dtlsParameters: producerTransport.dtlsParameters\n            });\n            _context2.next = 14;\n            break;\n          case 10:\n            _context2.prev = 10;\n            _context2.t0 = _context2[\"catch\"](1);\n            console.error(socket.id, ' : Producer Transport 생성 실패', _context2.t0);\n            callback({\n              error: _context2.t0.message\n            });\n          case 14:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[1, 10]]);\n    }));\n    return function (_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }());\n\n  // Consumer Transport 생성 요청 처리\n  socket.on('createConsumerTransport', /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(_, callback) {\n      var consumerTransport;\n      return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            console.log(socket.id, ' : Consumer Transport 생성 요청');\n            _context3.prev = 1;\n            _context3.next = 4;\n            return router.createWebRtcTransport({\n              listenIps: [{\n                ip: '0.0.0.0',\n                announcedIp: '117.16.153.134'\n              }],\n              enableUdp: true,\n              enableTcp: true\n            });\n          case 4:\n            consumerTransport = _context3.sent;\n            transports[socket.id].consumerTransports.push(consumerTransport);\n            console.log(socket.id, ' : Consumer Transport 생성 완료');\n            callback({\n              id: consumerTransport.id,\n              iceParameters: consumerTransport.iceParameters,\n              iceCandidates: consumerTransport.iceCandidates,\n              dtlsParameters: consumerTransport.dtlsParameters\n            });\n            _context3.next = 14;\n            break;\n          case 10:\n            _context3.prev = 10;\n            _context3.t0 = _context3[\"catch\"](1);\n            console.error(socket.id, ' : Consumer Transport 생성 실패', _context3.t0);\n            callback({\n              error: _context3.t0.message\n            });\n          case 14:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[1, 10]]);\n    }));\n    return function (_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n\n  // 클라이언트가 ProducerTransport를 만들고 연결을 요청\n  socket.on('connectProducerTransport', /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(_ref4, callback) {\n      var dtlsParameters, producerTransport;\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            dtlsParameters = _ref4.dtlsParameters;\n            console.log(socket.id, ' : Producer Transport 연결 요청');\n            _context4.prev = 2;\n            producerTransport = transports[socket.id].producerTransport;\n            if (producerTransport) {\n              _context4.next = 6;\n              break;\n            }\n            throw new Error('ProducerTransport가 존재하지 않습니다');\n          case 6:\n            _context4.next = 8;\n            return producerTransport.connect({\n              dtlsParameters: dtlsParameters\n            });\n          case 8:\n            callback();\n            _context4.next = 15;\n            break;\n          case 11:\n            _context4.prev = 11;\n            _context4.t0 = _context4[\"catch\"](2);\n            console.error('connectProducerTransport 오류:', _context4.t0);\n            callback({\n              error: _context4.t0.message\n            });\n          case 15:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4, null, [[2, 11]]);\n    }));\n    return function (_x6, _x7) {\n      return _ref5.apply(this, arguments);\n    };\n  }());\n\n  // 클라이언트가 ConsumerTransport 연결을 요청\n  socket.on('connectConsumerTransport', /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(_ref6, callback) {\n      var dtlsParameters, consumerTransport;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            dtlsParameters = _ref6.dtlsParameters;\n            console.log(socket.id, ' : Consumer Transport 연결 요청');\n            _context5.prev = 2;\n            consumerTransport = transports[socket.id].consumerTransports[0];\n            if (consumerTransport) {\n              _context5.next = 6;\n              break;\n            }\n            throw new Error('ConsumerTransport가 존재하지 않습니다');\n          case 6:\n            _context5.next = 8;\n            return consumerTransport.connect({\n              dtlsParameters: dtlsParameters\n            });\n          case 8:\n            callback();\n            _context5.next = 15;\n            break;\n          case 11:\n            _context5.prev = 11;\n            _context5.t0 = _context5[\"catch\"](2);\n            console.error('connectConsumerTransport 오류:', _context5.t0);\n            callback({\n              error: _context5.t0.message\n            });\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5, null, [[2, 11]]);\n    }));\n    return function (_x8, _x9) {\n      return _ref7.apply(this, arguments);\n    };\n  }());\n\n  // 사용자가 미디어 스트림을 생성 (produce)\n  socket.on('produce', /*#__PURE__*/function () {\n    var _ref9 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(_ref8, callback) {\n      var kind, rtpParameters, producerTransport, producer;\n      return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n        while (1) switch (_context6.prev = _context6.next) {\n          case 0:\n            kind = _ref8.kind, rtpParameters = _ref8.rtpParameters;\n            console.log(socket.id, ' : 미디어 스트림 생성 요청, kind:', kind);\n            _context6.prev = 2;\n            producerTransport = transports[socket.id].producerTransport;\n            if (producerTransport) {\n              _context6.next = 6;\n              break;\n            }\n            throw new Error('ProducerTransport가 존재하지 않습니다');\n          case 6:\n            _context6.next = 8;\n            return producerTransport.produce({\n              kind: kind,\n              rtpParameters: rtpParameters\n            });\n          case 8:\n            producer = _context6.sent;\n            producers[socket.id].push(producer);\n            console.log('Producer created for client:', socket.id, 'Producer ID:', producer.id);\n            callback({\n              id: producer.id\n            });\n\n            // 다른 클라이언트에게 새로운 Producer가 생겼음을 알림\n            socket.broadcast.emit('newProducer', {\n              producerId: producer.id,\n              clientId: socket.id,\n              kind: kind\n            });\n            _context6.next = 19;\n            break;\n          case 15:\n            _context6.prev = 15;\n            _context6.t0 = _context6[\"catch\"](2);\n            console.error('produce 오류:', _context6.t0);\n            callback({\n              error: _context6.t0.message\n            });\n          case 19:\n          case \"end\":\n            return _context6.stop();\n        }\n      }, _callee6, null, [[2, 15]]);\n    }));\n    return function (_x10, _x11) {\n      return _ref9.apply(this, arguments);\n    };\n  }());\n\n  // 사용자가 미디어를 소비 (consume)\n  // 사용자가 미디어를 소비 (consume)\n  socket.on('consume', /*#__PURE__*/function () {\n    var _ref11 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(_ref10, callback) {\n      var producerId, kind, rtpCapabilities, consumerTransport, consumer;\n      return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n        while (1) switch (_context8.prev = _context8.next) {\n          case 0:\n            producerId = _ref10.producerId, kind = _ref10.kind, rtpCapabilities = _ref10.rtpCapabilities;\n            console.log(socket.id, ' : 미디어 소비 요청');\n            _context8.prev = 2;\n            if (router.canConsume({\n              producerId: producerId,\n              rtpCapabilities: rtpCapabilities\n            })) {\n              _context8.next = 5;\n              break;\n            }\n            throw new Error('미디어 소비가 불가능합니다');\n          case 5:\n            consumerTransport = transports[socket.id].consumerTransports[0]; // ConsumerTransport가 없으면 오류 반환 대신 생성 재시도 또는 대기\n            if (consumerTransport) {\n              _context8.next = 14;\n              break;\n            }\n            console.warn(socket.id, ' : ConsumerTransport가 존재하지 않습니다, 다시 생성합니다.');\n\n            // ConsumerTransport를 생성하여 재시도\n            _context8.next = 10;\n            return router.createWebRtcTransport({\n              listenIps: [{\n                ip: '0.0.0.0',\n                announcedIp: '117.16.153.134'\n              }],\n              enableUdp: true,\n              enableTcp: true\n            });\n          case 10:\n            consumerTransport = _context8.sent;\n            transports[socket.id].consumerTransports.push(consumerTransport);\n\n            // ConsumerTransport 연결 요청 (여기서 클라이언트로부터 필요한 dtlsParameters를 받아야 함)\n            socket.emit('getDtlsParametersForConsumer', {}, /*#__PURE__*/function () {\n              var _ref13 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(_ref12) {\n                var dtlsParameters, _consumer;\n                return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n                  while (1) switch (_context7.prev = _context7.next) {\n                    case 0:\n                      dtlsParameters = _ref12.dtlsParameters;\n                      _context7.prev = 1;\n                      _context7.next = 4;\n                      return consumerTransport.connect({\n                        dtlsParameters: dtlsParameters\n                      });\n                    case 4:\n                      consumerTransport._isConnected = true;\n                      console.log(socket.id, ' : Consumer Transport 연결 성공');\n\n                      // 이제 실제로 Consumer 생성\n                      _context7.next = 8;\n                      return consumerTransport.consume({\n                        producerId: producerId,\n                        rtpCapabilities: rtpCapabilities\n                      });\n                    case 8:\n                      _consumer = _context7.sent;\n                      console.log('Consumer created for client:', socket.id, 'Consumer ID:', _consumer.id);\n                      consumers[socket.id].push(_consumer);\n\n                      // Consumer 정보를 클라이언트에 전달\n                      callback({\n                        id: _consumer.id,\n                        producerId: producerId,\n                        kind: _consumer.kind,\n                        rtpParameters: _consumer.rtpParameters\n                      });\n                      _context7.next = 18;\n                      break;\n                    case 14:\n                      _context7.prev = 14;\n                      _context7.t0 = _context7[\"catch\"](1);\n                      console.error('ConsumerTransport 연결 오류:', _context7.t0);\n                      callback({\n                        error: _context7.t0.message\n                      });\n                    case 18:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }, _callee7, null, [[1, 14]]);\n              }));\n              return function (_x14) {\n                return _ref13.apply(this, arguments);\n              };\n            }());\n            return _context8.abrupt(\"return\");\n          case 14:\n            _context8.next = 16;\n            return consumerTransport.consume({\n              producerId: producerId,\n              rtpCapabilities: rtpCapabilities\n            });\n          case 16:\n            consumer = _context8.sent;\n            console.log('Consumer created for client:', socket.id, 'Consumer ID:', consumer.id);\n            consumers[socket.id].push(consumer);\n\n            // Consumer 정보를 클라이언트에 전달\n            callback({\n              id: consumer.id,\n              producerId: producerId,\n              kind: consumer.kind,\n              rtpParameters: consumer.rtpParameters\n            });\n            _context8.next = 26;\n            break;\n          case 22:\n            _context8.prev = 22;\n            _context8.t0 = _context8[\"catch\"](2);\n            console.error('consume 오류:', _context8.t0);\n            callback({\n              error: _context8.t0.message\n            });\n          case 26:\n          case \"end\":\n            return _context8.stop();\n        }\n      }, _callee8, null, [[2, 22]]);\n    }));\n    return function (_x12, _x13) {\n      return _ref11.apply(this, arguments);\n    };\n  }());\n  // 클라이언트 연결 해제 처리\n  socket.on('disconnect', function () {\n    console.log('Client disconnected:', socket.id);\n\n    // 연결 해제 시 모든 관련 리소스 해제\n    if (transports[socket.id]) {\n      if (transports[socket.id].producerTransport) {\n        transports[socket.id].producerTransport.close();\n      }\n      transports[socket.id].consumerTransports.forEach(function (transport) {\n        return transport.close();\n      });\n    }\n    producers[socket.id].forEach(function (producer) {\n      return producer.close();\n    });\n    consumers[socket.id].forEach(function (consumer) {\n      return consumer.close();\n    });\n    delete transports[socket.id];\n    delete producers[socket.id];\n    delete consumers[socket.id];\n\n    // 모든 클라이언트에게 연결 해제된 클라이언트의 비디오를 제거하라고 알림\n    io.emit('removeClient', {\n      clientId: socket.id\n    });\n  });\n});\n\n//# sourceURL=webpack://webrtc-project/./server/app02.js?");

/***/ }),

/***/ "express":
/*!**************************!*\
  !*** external "express" ***!
  \**************************/
/***/ ((module) => {

"use strict";
module.exports = require("express");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "mediasoup":
/*!****************************!*\
  !*** external "mediasoup" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("mediasoup");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "socket.io":
/*!****************************!*\
  !*** external "socket.io" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("socket.io");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./server/app02.js");
/******/ 	
/******/ })()
;